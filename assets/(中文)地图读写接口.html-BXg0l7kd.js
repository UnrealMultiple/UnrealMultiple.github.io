import{_ as e,c as i,a as d,o as l}from"./app-DaEuJxNx.js";const g={};function r(s,t){return l(),i("div",null,[...t[0]||(t[0]=[d('<h1 id="图块生成器" tabindex="-1"><a class="header-anchor" href="#图块生成器"><span>图块生成器</span></a></h1><p>TShock 内置了两个图块生成器，它们用不同的系统替换了 Terraria 的图块数据存储。此外，一个主要的插件开发者提供了额外的图块生成器集合。对于开发者来说，这些生成器实现了 <code>ITile</code> 接口并将自己注册为图块生成器。<code>ITile</code> 由 <code>OTAPI</code> 提供。</p><p>默认情况下，Terraria 以相对未优化的方式存储图块。从理论上讲，这是访问图块最快的方式，但这是以内存为代价的。如果您运行的 Terraria 服务器内存有限，您可能希望回收内存并改为交换处理能力。这就是这些生成器的作用。</p><h2 id="constileation" tabindex="-1"><a class="header-anchor" href="#constileation"><span>Constileation</span></a></h2><p>Constileation 是 TShock 内置的最新图块生成器。它比 HeapTile 更快，并且节省内存。它每个图块使用 14 字节。使用 <code>-c</code> 或 <code>-constileation</code> 命令行参数启动您的 TShock 服务器来使用此生成器。</p><h2 id="heaptile" tabindex="-1"><a class="header-anchor" href="#heaptile"><span>HeapTile</span></a></h2><p>HeapTile 是 TShock 内置的最早的图块生成器之一。同样，它提供内存优势，但与 Constileation 和 Tiled 相比真的很慢。使用 <code>-heaptile</code> 命令行参数启动您的 TShock 服务器来使用此生成器。</p><h2 id="tiled" tabindex="-1"><a class="header-anchor" href="#tiled"><span>Tiled</span></a></h2><p><a href="https://github.com/thanatos-tshock" target="_blank" rel="noopener noreferrer">thanatos</a> 开发的 <a href="https://github.com/thanatos-tshock/Tiled" target="_blank" rel="noopener noreferrer">TShock 的 tiled 插件</a> 提供了额外的图块生成器，包括他们的 <code>1d</code>、<code>2d</code> 和 <code>struct</code> 生成器。我们敦促您查看并比较所有图块生成器，找到最适合您需求的生成器。Tiled 试图带来两全其美的效果，提供既能最小化内存使用又能提供适度性能的图块生成器。</p><h2 id="图块生成器基准测试" tabindex="-1"><a class="header-anchor" href="#图块生成器基准测试"><span>图块生成器基准测试</span></a></h2><p><a href="https://github.com/SignatureBeef" target="_blank" rel="noopener noreferrer">@SignatureBeef</a> 对各种图块生成器进行了基准测试。这里转载了 <a href="https://github.com/Pryaxis/TSAPI/pull/231" target="_blank" rel="noopener noreferrer">TSAPI PR #231</a> 中的一些运行示例。对于这些测试，以下是生成器：</p><ul><li><code>Stock</code> 是 Terraria 服务器的原始配置。</li><li><code>Heap</code> 是 <code>HeapTile</code></li><li><code>Constileation</code> 是 <code>Constileation</code></li><li><code>1d</code> 来自 Tiled</li><li><code>2d</code> 来自 Tiled</li><li><code>Struct</code> 来自 Tiled</li></ul><p>基准测试：每个生成器对小世界中的每个图块调用 .active 的速度</p><table><thead><tr><th>Method</th><th style="text-align:right;">Mean</th><th style="text-align:right;">Error</th><th style="text-align:right;">StdDev</th><th style="text-align:right;">Ratio</th><th style="text-align:right;">RatioSD</th></tr></thead><tbody><tr><td>Active_Stock</td><td style="text-align:right;">31.78 ms</td><td style="text-align:right;">0.456 ms</td><td style="text-align:right;">0.426 ms</td><td style="text-align:right;">1.00</td><td style="text-align:right;">0.00</td></tr><tr><td>Active_Heap</td><td style="text-align:right;">122.07 ms</td><td style="text-align:right;">2.413 ms</td><td style="text-align:right;">2.370 ms</td><td style="text-align:right;">3.84</td><td style="text-align:right;">0.09</td></tr><tr><td>Active_Constileation</td><td style="text-align:right;">40.41 ms</td><td style="text-align:right;">0.575 ms</td><td style="text-align:right;">0.510 ms</td><td style="text-align:right;">1.27</td><td style="text-align:right;">0.02</td></tr><tr><td>Active_1d</td><td style="text-align:right;">52.94 ms</td><td style="text-align:right;">0.731 ms</td><td style="text-align:right;">0.648 ms</td><td style="text-align:right;">1.66</td><td style="text-align:right;">0.03</td></tr><tr><td>Active_2d</td><td style="text-align:right;">54.96 ms</td><td style="text-align:right;">1.083 ms</td><td style="text-align:right;">1.064 ms</td><td style="text-align:right;">1.73</td><td style="text-align:right;">0.05</td></tr><tr><td>Active_Struct</td><td style="text-align:right;">61.59 ms</td><td style="text-align:right;">0.651 ms</td><td style="text-align:right;">0.544 ms</td><td style="text-align:right;">1.93</td><td style="text-align:right;">0.03</td></tr></tbody></table><p>基准测试：生成器对小世界中的每个图块发布和存储自己数据的速度</p><table><thead><tr><th>Method</th><th style="text-align:right;">Mean</th><th style="text-align:right;">Error</th><th style="text-align:right;">StdDev</th><th style="text-align:right;">Ratio</th><th style="text-align:right;">RatioSD</th></tr></thead><tbody><tr><td>AssignFromSelf_Stock</td><td style="text-align:right;">34.30 ms</td><td style="text-align:right;">0.486 ms</td><td style="text-align:right;">0.454 ms</td><td style="text-align:right;">1.00</td><td style="text-align:right;">0.00</td></tr><tr><td>AssignFromSelf_Heap</td><td style="text-align:right;">267.03 ms</td><td style="text-align:right;">3.455 ms</td><td style="text-align:right;">3.062 ms</td><td style="text-align:right;">7.79</td><td style="text-align:right;">0.15</td></tr><tr><td>AssignFromSelf_Constileation</td><td style="text-align:right;">42.30 ms</td><td style="text-align:right;">0.664 ms</td><td style="text-align:right;">0.621 ms</td><td style="text-align:right;">1.23</td><td style="text-align:right;">0.03</td></tr><tr><td>AssignFromSelf_1d</td><td style="text-align:right;">208.46 ms</td><td style="text-align:right;">2.823 ms</td><td style="text-align:right;">2.640 ms</td><td style="text-align:right;">6.08</td><td style="text-align:right;">0.10</td></tr><tr><td>AssignFromSelf_2d</td><td style="text-align:right;">242.42 ms</td><td style="text-align:right;">4.669 ms</td><td style="text-align:right;">6.234 ms</td><td style="text-align:right;">7.11</td><td style="text-align:right;">0.24</td></tr><tr><td>AssignFromSelf_Struct</td><td style="text-align:right;">278.45 ms</td><td style="text-align:right;">4.580 ms</td><td style="text-align:right;">4.284 ms</td><td style="text-align:right;">8.12</td><td style="text-align:right;">0.13</td></tr></tbody></table><p>基准测试：生成器对小世界中的每个图块转换其他图块数据（如 Terraria.Tile）的速度</p><table><thead><tr><th>Method</th><th style="text-align:right;">Mean</th><th style="text-align:right;">Error</th><th style="text-align:right;">StdDev</th><th style="text-align:right;">Ratio</th></tr></thead><tbody><tr><td>AssignFromTile_Stock</td><td style="text-align:right;">433.3 ms</td><td style="text-align:right;">7.22 ms</td><td style="text-align:right;">6.40 ms</td><td style="text-align:right;">1.00</td></tr><tr><td>AssignFromTile_Heap</td><td style="text-align:right;">210.4 ms</td><td style="text-align:right;">3.33 ms</td><td style="text-align:right;">3.11 ms</td><td style="text-align:right;">0.49</td></tr><tr><td>AssignFromTile_Constileation</td><td style="text-align:right;">195.7 ms</td><td style="text-align:right;">2.45 ms</td><td style="text-align:right;">2.29 ms</td><td style="text-align:right;">0.45</td></tr><tr><td>AssignFromTile_1d</td><td style="text-align:right;">239.0 ms</td><td style="text-align:right;">2.07 ms</td><td style="text-align:right;">1.83 ms</td><td style="text-align:right;">0.55</td></tr><tr><td>AssignFromTile_2d</td><td style="text-align:right;">240.5 ms</td><td style="text-align:right;">3.03 ms</td><td style="text-align:right;">2.69 ms</td><td style="text-align:right;">0.56</td></tr><tr><td>AssignFromTile_Struct</td><td style="text-align:right;">277.6 ms</td><td style="text-align:right;">3.74 ms</td><td style="text-align:right;">3.49 ms</td><td style="text-align:right;">0.64</td></tr></tbody></table><p>基准测试：生成器对小世界中的每个图块清除图块数据（使用方法）的速度</p><table><thead><tr><th>Method</th><th style="text-align:right;">Mean</th><th style="text-align:right;">Error</th><th style="text-align:right;">StdDev</th><th style="text-align:right;">Ratio</th><th style="text-align:right;">RatioSD</th></tr></thead><tbody><tr><td>Clear_Stock</td><td style="text-align:right;">308.8 ms</td><td style="text-align:right;">3.90 ms</td><td style="text-align:right;">3.65 ms</td><td style="text-align:right;">1.00</td><td style="text-align:right;">0.00</td></tr><tr><td>Clear_Heap</td><td style="text-align:right;">479.1 ms</td><td style="text-align:right;">9.20 ms</td><td style="text-align:right;">9.84 ms</td><td style="text-align:right;">1.55</td><td style="text-align:right;">0.03</td></tr><tr><td>Clear_Constileation</td><td style="text-align:right;">331.2 ms</td><td style="text-align:right;">2.16 ms</td><td style="text-align:right;">1.92 ms</td><td style="text-align:right;">1.07</td><td style="text-align:right;">0.01</td></tr><tr><td>Clear_1d</td><td style="text-align:right;">557.8 ms</td><td style="text-align:right;">3.24 ms</td><td style="text-align:right;">3.03 ms</td><td style="text-align:right;">1.81</td><td style="text-align:right;">0.03</td></tr><tr><td>Clear_2d</td><td style="text-align:right;">692.9 ms</td><td style="text-align:right;">20.61 ms</td><td style="text-align:right;">59.78 ms</td><td style="text-align:right;">2.14</td><td style="text-align:right;">0.16</td></tr><tr><td>Clear_Struct</td><td style="text-align:right;">789.2 ms</td><td style="text-align:right;">13.95 ms</td><td style="text-align:right;">22.93 ms</td><td style="text-align:right;">2.60</td><td style="text-align:right;">0.11</td></tr></tbody></table><p>基准测试：生成器对小世界中的每个图块运行类似于原版中清理世界功能的逻辑的速度</p><table><thead><tr><th>Method</th><th style="text-align:right;">Mean</th><th style="text-align:right;">Error</th><th style="text-align:right;">StdDev</th><th style="text-align:right;">Ratio</th><th style="text-align:right;">RatioSD</th></tr></thead><tbody><tr><td>ClearWorld_Stock</td><td style="text-align:right;">79.27 ms</td><td style="text-align:right;">0.669 ms</td><td style="text-align:right;">0.593 ms</td><td style="text-align:right;">1.00</td><td style="text-align:right;">0.00</td></tr><tr><td>ClearWorld_Heap</td><td style="text-align:right;">239.87 ms</td><td style="text-align:right;">2.324 ms</td><td style="text-align:right;">2.060 ms</td><td style="text-align:right;">3.03</td><td style="text-align:right;">0.03</td></tr><tr><td>ClearWorld_Constileation</td><td style="text-align:right;">62.48 ms</td><td style="text-align:right;">0.948 ms</td><td style="text-align:right;">0.887 ms</td><td style="text-align:right;">0.79</td><td style="text-align:right;">0.01</td></tr><tr><td>ClearWorld_1d</td><td style="text-align:right;">139.73 ms</td><td style="text-align:right;">1.621 ms</td><td style="text-align:right;">1.516 ms</td><td style="text-align:right;">1.76</td><td style="text-align:right;">0.02</td></tr><tr><td>ClearWorld_2d</td><td style="text-align:right;">151.27 ms</td><td style="text-align:right;">2.341 ms</td><td style="text-align:right;">2.190 ms</td><td style="text-align:right;">1.91</td><td style="text-align:right;">0.03</td></tr><tr><td>ClearWorld_Struct</td><td style="text-align:right;">177.16 ms</td><td style="text-align:right;">3.190 ms</td><td style="text-align:right;">2.828 ms</td><td style="text-align:right;">2.23</td><td style="text-align:right;">0.05</td></tr></tbody></table><p>基准测试：生成器对小世界中的每个图块发布图块数据的速度</p><table><thead><tr><th>Method</th><th style="text-align:right;">Mean</th><th style="text-align:right;">Error</th><th style="text-align:right;">StdDev</th><th style="text-align:right;">Ratio</th><th style="text-align:right;">RatioSD</th></tr></thead><tbody><tr><td>Gets_Stock</td><td style="text-align:right;">17.49 ms</td><td style="text-align:right;">0.224 ms</td><td style="text-align:right;">0.210 ms</td><td style="text-align:right;">1.00</td><td style="text-align:right;">0.00</td></tr><tr><td>Gets_Heap</td><td style="text-align:right;">100.88 ms</td><td style="text-align:right;">2.007 ms</td><td style="text-align:right;">2.465 ms</td><td style="text-align:right;">5.76</td><td style="text-align:right;">0.17</td></tr><tr><td>Gets_Constileation</td><td style="text-align:right;">27.15 ms</td><td style="text-align:right;">0.513 ms</td><td style="text-align:right;">0.455 ms</td><td style="text-align:right;">1.55</td><td style="text-align:right;">0.03</td></tr><tr><td>Gets_1d</td><td style="text-align:right;">29.46 ms</td><td style="text-align:right;">0.431 ms</td><td style="text-align:right;">0.403 ms</td><td style="text-align:right;">1.68</td><td style="text-align:right;">0.03</td></tr><tr><td>Gets_2d</td><td style="text-align:right;">27.93 ms</td><td style="text-align:right;">0.258 ms</td><td style="text-align:right;">0.242 ms</td><td style="text-align:right;">1.60</td><td style="text-align:right;">0.02</td></tr><tr><td>Gets_Struct</td><td style="text-align:right;">33.77 ms</td><td style="text-align:right;">0.671 ms</td><td style="text-align:right;">1.719 ms</td><td style="text-align:right;">1.85</td><td style="text-align:right;">0.08</td></tr></tbody></table><p>基准测试：生成器对小世界中的每个图块更改图块类型的速度</p><table><thead><tr><th>Method</th><th style="text-align:right;">Mean</th><th style="text-align:right;">Error</th><th style="text-align:right;">StdDev</th><th style="text-align:right;">Ratio</th><th style="text-align:right;">RatioSD</th></tr></thead><tbody><tr><td>Type_Stock</td><td style="text-align:right;">28.41 ms</td><td style="text-align:right;">0.420 ms</td><td style="text-align:right;">0.393 ms</td><td style="text-align:right;">1.00</td><td style="text-align:right;">0.00</td></tr><tr><td>Type_Heap</td><td style="text-align:right;">120.99 ms</td><td style="text-align:right;">2.317 ms</td><td style="text-align:right;">2.480 ms</td><td style="text-align:right;">4.25</td><td style="text-align:right;">0.10</td></tr><tr><td>Type_Constileation</td><td style="text-align:right;">36.95 ms</td><td style="text-align:right;">0.732 ms</td><td style="text-align:right;">0.977 ms</td><td style="text-align:right;">1.30</td><td style="text-align:right;">0.04</td></tr><tr><td>Type_1d</td><td style="text-align:right;">38.65 ms</td><td style="text-align:right;">0.686 ms</td><td style="text-align:right;">1.027 ms</td><td style="text-align:right;">1.38</td><td style="text-align:right;">0.04</td></tr><tr><td>Type_2d</td><td style="text-align:right;">39.64 ms</td><td style="text-align:right;">0.405 ms</td><td style="text-align:right;">0.359 ms</td><td style="text-align:right;">1.40</td><td style="text-align:right;">0.02</td></tr><tr><td>Type_Struct</td><td style="text-align:right;">43.09 ms</td><td style="text-align:right;">0.749 ms</td><td style="text-align:right;">0.664 ms</td><td style="text-align:right;">1.52</td><td style="text-align:right;">0.03</td></tr></tbody></table><p>基准测试：测试生成器对小世界中的每个图块调用基本操作（如清除、类型更改和 .active）的速度</p><table><thead><tr><th>Method</th><th style="text-align:right;">Mean</th><th style="text-align:right;">Error</th><th style="text-align:right;">StdDev</th><th style="text-align:right;">Ratio</th><th style="text-align:right;">RatioSD</th></tr></thead><tbody><tr><td>Use_Stock</td><td style="text-align:right;">359.4 ms</td><td style="text-align:right;">4.67 ms</td><td style="text-align:right;">4.14 ms</td><td style="text-align:right;">1.00</td><td style="text-align:right;">0.00</td></tr><tr><td>Use_Heap</td><td style="text-align:right;">666.4 ms</td><td style="text-align:right;">10.78 ms</td><td style="text-align:right;">10.08 ms</td><td style="text-align:right;">1.86</td><td style="text-align:right;">0.04</td></tr><tr><td>Use_Constileation</td><td style="text-align:right;">407.3 ms</td><td style="text-align:right;">5.87 ms</td><td style="text-align:right;">5.20 ms</td><td style="text-align:right;">1.13</td><td style="text-align:right;">0.02</td></tr><tr><td>Use_1d</td><td style="text-align:right;">654.5 ms</td><td style="text-align:right;">7.30 ms</td><td style="text-align:right;">6.83 ms</td><td style="text-align:right;">1.82</td><td style="text-align:right;">0.03</td></tr><tr><td>Use_2d</td><td style="text-align:right;">741.7 ms</td><td style="text-align:right;">8.19 ms</td><td style="text-align:right;">7.66 ms</td><td style="text-align:right;">2.07</td><td style="text-align:right;">0.03</td></tr><tr><td>Use_Struct</td><td style="text-align:right;">1,235.3 ms</td><td style="text-align:right;">7.60 ms</td><td style="text-align:right;">7.11 ms</td><td style="text-align:right;">3.44</td><td style="text-align:right;">0.03</td></tr></tbody></table>',28)])])}const h=e(g,[["render",r]]),n=JSON.parse('{"path":"/zh/tshock-wiki/(%E4%B8%AD%E6%96%87)%E5%9C%B0%E5%9B%BE%E8%AF%BB%E5%86%99%E6%8E%A5%E5%8F%A3.html","title":"图块生成器","lang":"zh-CN","frontmatter":{"description":"图块生成器 TShock 内置了两个图块生成器，它们用不同的系统替换了 Terraria 的图块数据存储。此外，一个主要的插件开发者提供了额外的图块生成器集合。对于开发者来说，这些生成器实现了 ITile 接口并将自己注册为图块生成器。ITile 由 OTAPI 提供。 默认情况下，Terraria 以相对未优化的方式存储图块。从理论上讲，这是访问图块...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"图块生成器\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"],["meta",{"property":"og:url","content":"http://docs.terraria.ink/zh/tshock-wiki/(%E4%B8%AD%E6%96%87)%E5%9C%B0%E5%9B%BE%E8%AF%BB%E5%86%99%E6%8E%A5%E5%8F%A3.html"}],["meta",{"property":"og:site_name","content":"TShock中文插件库"}],["meta",{"property":"og:title","content":"图块生成器"}],["meta",{"property":"og:description","content":"图块生成器 TShock 内置了两个图块生成器，它们用不同的系统替换了 Terraria 的图块数据存储。此外，一个主要的插件开发者提供了额外的图块生成器集合。对于开发者来说，这些生成器实现了 ITile 接口并将自己注册为图块生成器。ITile 由 OTAPI 提供。 默认情况下，Terraria 以相对未优化的方式存储图块。从理论上讲，这是访问图块..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}]]},"git":{},"autoDesc":true,"filePathRelative":"zh/tshock-wiki/(中文)地图读写接口.md"}');export{h as comp,n as data};
